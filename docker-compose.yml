services:
  app:
    build: .
    container_name: obs-app
    ports:
      - "8000:8000"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: obs-prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom-data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      - app

  grafana:
    image: grafana/grafana-oss:latest
    container_name: obs-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/etc/grafana/dashboards:ro
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus

  # Optional: simple load generator so you see graphs moving
  loadgen:
    image: curlimages/curl:8.8.0
    container_name: obs-loadgen
    command: [ "sh", "-c", "while true; do curl -s app:8000/ >/dev/null; curl -s app:8000/work >/dev/null; sleep 0.2; done" ]
    depends_on:
      - app
    restart: unless-stopped

volumes:
  prom-data:
  grafana-data:
